// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// cg_cpp
arma::mat cg_cpp(arma::mat A, arma::mat b, arma::mat B);
RcppExport SEXP _rewlr_cg_cpp(SEXP ASEXP, SEXP bSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(cg_cpp(A, b, B));
    return rcpp_result_gen;
END_RCPP
}
// mmult
NumericMatrix mmult(const NumericMatrix& m1, const NumericMatrix& m2);
RcppExport SEXP _rewlr_mmult(SEXP m1SEXP, SEXP m2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type m2(m2SEXP);
    rcpp_result_gen = Rcpp::wrap(mmult(m1, m2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rewlr_cg_cpp", (DL_FUNC) &_rewlr_cg_cpp, 3},
    {"_rewlr_mmult", (DL_FUNC) &_rewlr_mmult, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_rewlr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
